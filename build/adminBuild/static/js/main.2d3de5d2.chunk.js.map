{"version":3,"sources":["config/apiUrl.js","pages/Login.js","pages/AddArticle.js","pages/ArticleList.js","pages/AdminIndex.js","pages/Main.js","index.js"],"names":["ipUrl","servicePath","checkLogin","getTypeInfo","addArticle","updateArticle","getArticleList","delArticle","getArticleById","Login","props","useState","userName","setUserName","password","setPassword","isLoading","setIsLoading","className","tip","spinning","title","bordered","style","width","id","size","placeholder","prefix","type","color","onChange","e","target","value","Password","block","onClick","message","error","dataProps","axios","method","url","data","withCredentials","header","then","res","localStorage","setItem","openId","history","push","setTimeout","Option","Select","TextArea","Input","AddArticle","articleId","setArticleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introducemd","setIntroducemd","introducehtml","setIntroducehtml","showDate","setShowDate","typeInfo","setTypeInfo","selectedType","setSelectType","marked","setOptions","renderer","Renderer","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","changeContent","html","changeIntroduce","useEffect","removeItem","tmpId","match","params","article_content","introduce","tmpInt","addTime","typeId","gutter","span","defaultValue","map","item","index","key","typeName","rows","onPressEnter","dangerouslySetInnerHTML","__html","type_id","datetext","replace","Date","getTime","console","log","view_count","Math","ceil","random","insertId","isScuccess","success","date","dateString","confirm","Modal","ArticleList","list","setList","getList","dataSource","renderItem","Item","part_count","content","onOk","onCancel","Header","Layout","Content","Footer","Sider","SubMenu","Menu","AdminIndex","collapsed","setCollapsed","minHeight","theme","collapsible","onCollapse","defaultSelectedKeys","mode","background","padding","borderBottomStyle","borderBottomWidth","borderBottomColor","margin","path","exact","component","textAlign","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d3de5d2.chunk.js","sourcesContent":["// const ipUrl = 'http://localhost:7001/admin/'\nconst ipUrl = 'http://service.mfnothing.top/admin/'\n\nconst servicePath = {\n    checkLogin:ipUrl + 'checkLogin',  // 检查用户名密码是否正确\n    getTypeInfo:ipUrl + 'getTypeInfo',  // 获得文章类别信息\n    addArticle:ipUrl + 'addArticle',  // 添加文章\n    updateArticle:ipUrl + 'updateArticle',  // 修改文章第api地址\n    getArticleList:ipUrl + 'getArticleList', //  文章列表\n    delArticle:ipUrl + 'delArticle/' ,  //  删除文章\n    getArticleById: ipUrl + 'getArticleById/', //根据文章id获取文章详情\n}\n\nexport default servicePath","import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Card, Input, Icon, Button, Spin, message } from 'antd';\nimport axios from 'axios'\nimport servicePath from '../config/apiUrl'\n\n\nimport '../static/css/Login.css';\n\nfunction Login(props) {\n    const [userName, setUserName] = useState('')\n    const [password, setPassword] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    const checkLogin = () => {\n        setIsLoading(true)\n\n        if (!userName) {\n            message.error('用户名不能为空')\n            return false\n        } else if (!password) {\n            message.error('密码不能为空')\n            return false\n        }\n        let dataProps = {\n            'userName': userName,\n            'password': password\n        }\n        axios({\n            method: 'post',\n            url: servicePath.checkLogin,\n            data: dataProps,\n            withCredentials: true,\n            header: { 'Access-Control-Allow-Origin': '*' }\n        }).then(\n            res => {\n                setIsLoading(false)\n                if (res.data.data === '登录成功') {\n                    localStorage.setItem('openId', res.data.openId)\n                    props.history.push('/index')\n                } else {\n                    message.error('用户名密码错误')\n                }\n            }\n        )\n\n        setTimeout(() => {\n            setIsLoading(false)\n        }, 1000)\n    }\n\n    return (\n        <div className=\"login-div\">\n            <Spin tip=\"Loading...\" spinning={isLoading}>\n                <Card title=\"MFNothing Blog  System\" bordered={true} style={{ width: 400 }} >\n                    <Input\n                        id=\"userName\"\n                        size=\"large\"\n                        placeholder=\"Enter your userName\"\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        onChange={(e) => { setUserName(e.target.value) }}\n                    />\n                    <br /><br />\n                    <Input.Password\n                        id=\"password\"\n                        size=\"large\"\n                        placeholder=\"Enter your password\"\n                        prefix={<Icon type=\"key\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        onChange={(e) => { setPassword(e.target.value) }}\n                    />\n                    <br /><br />\n                    <Button type=\"primary\" size=\"large\" block onClick={checkLogin} > Login in </Button>\n                </Card>\n            </Spin>\n        </div>\n    )\n}\n\nexport default Login","import React, { useState, useEffect } from 'react';\nimport marked from 'marked'\nimport '../static/css/AddArticle.css'\nimport { Row, Col, Input, Select, Button, DatePicker, message } from 'antd'\nimport axios from 'axios'\nimport servicePath from '../config/apiUrl'\n\nconst { Option } = Select\nconst { TextArea } = Input\n\n\nfunction AddArticle(props) {\n    const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\n    const [articleTitle, setArticleTitle] = useState('')   //文章标题\n    const [articleContent, setArticleContent] = useState('')  //markdown的编辑内容\n    const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\n    const [introducemd, setIntroducemd] = useState()            //简介的markdown内容\n    const [introducehtml, setIntroducehtml] = useState('等待编辑') //简介的html内容\n    const [showDate, setShowDate] = useState()   //发布日期\n    const [updateDate, setUpdateDate] = useState() //修改日志的日期\n    const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\n    const [selectedType, setSelectType] = useState(0) //选择的文章类别\n\n    marked.setOptions({\n        renderer: new marked.Renderer(),\n        gfm: true,\n        pedantic: false,\n        sanitize: false,\n        tables: true,\n        breaks: false,\n        smartLists: true,\n        smartypants: false,\n    });\n\n    const changeContent = (e) => {\n        setArticleContent(e.target.value)\n        let html = marked(e.target.value)\n        setMarkdownContent(html)\n    }\n\n    const changeIntroduce = (e) => {\n        setIntroducemd(e.target.value)\n        let html = marked(e.target.value)\n        setIntroducehtml(html)\n    }\n\n    //从中台得到文章类别信息\n    const getTypeInfo = (props) => {\n        axios({\n            method: 'get',\n            url: servicePath.getTypeInfo,\n            header: { 'Access-Control-Allow-Origin': '*' },\n            withCredentials: true\n        }).then(\n            res => {\n                if (res.data.data === \"没有登录\") {\n                    localStorage.removeItem('openId')\n                    props.history.push('/')\n                } else {\n                    setTypeInfo(res.data.data)\n                }\n\n            }\n        )\n    }\n\n    const saveArticle = () => {\n        if (!selectedType) {\n            message.error('必须选择文章类别')\n            return false\n        } else if (!articleTitle) {\n            message.error('文章名称不能为空')\n            return false\n        } else if (!articleContent) {\n            message.error('文章内容不能为空')\n            return false\n        } else if (!introducemd) {\n            message.error('简介不能为空')\n            return false\n        } else if (!showDate) {\n            message.error('发布日期不能为空')\n            return false\n        }\n        let dataProps = {}   //传递到接口的参数\n        dataProps.type_id = selectedType\n        dataProps.title = articleTitle\n        dataProps.article_content = articleContent\n        dataProps.introduce = introducemd\n        let datetext = showDate.replace('-', '/') //把字符串转换成时间戳\n        dataProps.addTime = (new Date(datetext).getTime()) / 1000\n\n        if (articleId == 0) {\n            console.log('articleId=:' + articleId)\n            dataProps.view_count = Math.ceil(Math.random() * 100) + 1000\n            axios({\n                method: 'post',\n                url: servicePath.addArticle,\n                data: dataProps,\n                withCredentials: true\n            }).then(\n                res => {\n                    setArticleId(res.data.insertId)\n                    if (res.data.isScuccess) {\n                        message.success('文章保存成功')\n                    } else {\n                        message.error('文章保存失败');\n                    }\n\n                }\n            )\n        } else {\n\n            dataProps.id = articleId\n            axios({\n                method: 'post',\n                url: servicePath.updateArticle,\n                header: { 'Access-Control-Allow-Origin': '*' },\n                data: dataProps,\n                withCredentials: true\n            }).then(\n                res => {\n                    if (res.data.isScuccess) {\n                        message.success('文章保存成功')\n                    } else {\n                        message.error('保存失败');\n                    }\n                }\n            )\n        }\n    }\n\n    //选择类别后的便哈\n    const selectTypeHandler = (value) => {\n        setSelectType(value)\n    }\n\n    // 根据文章id获取文章详情\n    const getArticleById = (id)=>{\n        axios(servicePath.getArticleById+id,{ \n            withCredentials: true,\n            header:{ 'Access-Control-Allow-Origin':'*' }\n        }).then(\n            res=>{\n                //let articleInfo= res.data.data[0]\n                setArticleTitle(res.data.data[0].title)\n                setArticleContent(res.data.data[0].article_content)\n                let html=marked(res.data.data[0].article_content)\n                setMarkdownContent(html)\n                setIntroducemd(res.data.data[0].introduce)\n                let tmpInt = marked(res.data.data[0].introduce)\n                setIntroducehtml(tmpInt)\n                setShowDate(res.data.data[0].addTime)\n                setSelectType(res.data.data[0].typeId)\n    \n            }\n        )\n    }\n\n    useEffect(() => {\n        getTypeInfo()\n        //获得文章ID\n        let tmpId = props.match.params.id\n        if (tmpId) {\n            setArticleId(tmpId)\n            getArticleById(tmpId)\n        }\n    }, [])\n\n    return (\n        <div>\n            <Row gutter={5}>\n                <Col span={18}>\n                    <Row gutter={10} >\n                        <Col span={16}>\n                            <Input\n                                value={articleTitle}\n                                placeholder=\"博客标题\"\n                                onChange={e => {\n\n                                    setArticleTitle(e.target.value)\n                                }}\n                                size=\"large\" />\n                        </Col>\n                        <Col span={4}>\n                            <Select defaultValue={'视频教程'} size=\"large\" onChange={selectTypeHandler}>\n                                {\n                                    typeInfo.map((item, index) => {\n                                        return (<Option key={index} value={item.id}>{item.typeName}</Option>)\n                                    })\n                                }\n                            </Select>\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row gutter={10} >\n                        <Col span={12}>\n                            <TextArea\n                                value={articleContent}\n                                className=\"markdown-content\"\n                                rows={35}\n                                onChange={changeContent}\n                                onPressEnter={changeContent}\n                                placeholder=\"文章内容\"\n                            />\n                        </Col>\n                        <Col span={12}>\n                            <div\n                                className=\"show-html\"\n                                dangerouslySetInnerHTML={{ __html: markdownContent }} >\n                            </div>\n                        </Col>\n                    </Row>\n\n                </Col>\n                <Col span={6}>\n                    <Row>\n                        <Col span={24}>\n                            <Button size=\"large\">暂存文章</Button>&nbsp;\n                            <Button type=\"primary\" size=\"large\" onClick={saveArticle}>发布文章</Button>\n                            <br />\n                        </Col>\n                        <Col span={24}>\n                            <br />\n                            <TextArea\n                                rows={4}\n                                value={introducemd}\n                                onChange={changeIntroduce}\n                                onPressEnter={changeIntroduce}\n                                placeholder=\"文章简介\"\n                            />\n                            <br /><br />\n                            <div\n                                className=\"introduce-html\"\n                                dangerouslySetInnerHTML={{ __html: '文章简介：' + introducehtml }} >\n                            </div>\n                        </Col>\n                        <Col span={16}>\n                            <div className=\"date-select\">\n                                <DatePicker\n                                    onChange={(date, dateString) => setShowDate(dateString)}\n                                    placeholder={showDate || \"发布日期\"}\n                                    size=\"large\"\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n    )\n}\nexport default AddArticle\n\n","import React, { useState, useEffect } from 'react';\nimport '../static/css/ArticleList.css'\nimport { List, Row, Col, Modal, message, Button, Switch } from 'antd';\nimport axios from 'axios'\nimport servicePath from '../config/apiUrl'\nconst { confirm } = Modal;\n\nfunction ArticleList(props) {\n\n    const [list, setList] = useState([])\n\n    //得到文章列表\n    const getList = () => {\n        axios({\n            method: 'get',\n            url: servicePath.getArticleList,\n            withCredentials: true,\n            header: { 'Access-Control-Allow-Origin': '*' }\n        }).then(\n            res => {\n                setList(res.data.list)\n            }\n        )\n    }\n\n    //删除文章的方法\n    const delArticle = (id) => {\n        confirm({\n            title: '确定要删除这篇博客文章吗?',\n            content: '如果你点击OK按钮，文章将会永远被删除，无法恢复。',\n            onOk() {\n                axios(servicePath.delArticle + id, { withCredentials: true }).then(\n                    res => {\n                        message.success('文章删除成功')\n                        getList()\n                    }\n                )\n            },\n            onCancel() {\n                message.success('没有任何改变')\n            },\n        });\n\n    }\n\n    // 修改文章的方法\n    const updateArticle = (id) => {\n        props.history.push('/index/add/' + id)\n    }\n\n    useEffect(() => {\n        getList()\n    }, [])\n\n    return (\n        <div>\n            <List\n                header={\n                    <Row className=\"list-div\">\n                        <Col span={8}><b>标题</b></Col>\n                        <Col span={3}><b>类别</b></Col>\n                        <Col span={3}><b>发布时间</b></Col>\n                        <Col span={3}><b>集数</b></Col>\n                        <Col span={3}><b>浏览量</b></Col>\n                        <Col span={4}><b>操作</b></Col>\n                    </Row>\n                }\n                bordered\n                dataSource={list}\n                renderItem={item => {\n                    return (\n                        <List.Item>\n                            <Row className=\"list-div\">\n                                <Col span={8}>{item.title}</Col>\n                                <Col span={3}>{item.typeName}</Col>\n                                <Col span={3}>{item.addTime}</Col>\n                                <Col span={3}>共<span>{item.part_count}</span>集</Col>\n                                <Col span={3}>{item.view_count}</Col>\n                                <Col span={4}>\n                                    <Button onClick={() => { updateArticle(item.id) }} type=\"primary\" >修改</Button>&nbsp;\n                                    <Button onClick={() => { delArticle(item.id) }} >删除 </Button>\n                                </Col>\n                            </Row>\n\n                        </List.Item>\n                    )\n                }}\n            />\n\n        </div>\n    )\n\n}\n\nexport default ArticleList","import React, { useState } from 'react';\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport '../static/css/AdminIndex.css'\n\nimport { Route } from \"react-router-dom\";\nimport AddArticle from './AddArticle'\n\nimport ArticleList from './ArticleList'\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\n\nfunction AdminIndex(props) {\n\n  const [collapsed, setCollapsed] = useState(false)\n\n  const onCollapse = collapsed => {\n    setCollapsed(collapsed)\n  };\n\n  const handleClickArticle = e => {\n    if (e.key === 'addArticle') {\n      props.history.push('/index/add/')\n    } else {\n      props.history.push('/index/list/')\n    }\n\n  }\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider theme=\"light\" collapsible collapsed={collapsed} onCollapse={onCollapse}>\n        <div className=\"logo\" />\n        <Menu defaultSelectedKeys={['1']} mode=\"inline\">\n          <Menu.Item key=\"1\">\n            <Icon type=\"pie-chart\" />\n            <span>工作台</span>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Icon type=\"desktop\" />\n            <span>添加文章</span>\n          </Menu.Item>\n          <SubMenu\n            key=\"sub1\"\n            onClick={handleClickArticle}\n            title={\n              <span>\n                <Icon type=\"desktop\" />\n                <span>文章管理</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"addArticle\">添加文章</Menu.Item>\n            <Menu.Item key=\"articleList\">文章列表</Menu.Item>\n          </SubMenu>\n\n          <Menu.Item key=\"9\">\n            <Icon type=\"file\" />\n            <span>留言管理</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header style={{ background: '#f0f2f5', padding: 0, borderBottomStyle: 'solid', borderBottomWidth: 1, borderBottomColor: '#fff' }} />\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>后台管理</Breadcrumb.Item>\n            <Breadcrumb.Item>工作台</Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n            <div>\n              <Route path=\"/index/\" exact component={AddArticle} />\n              <Route path=\"/index/add/\" exact component={AddArticle} />\n              <Route path=\"/index/add/:id\" exact component={AddArticle} />\n              <Route path=\"/index/list/\" component={ArticleList} />\n            </div>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>MFNothing.top</Footer>\n      </Layout>\n    </Layout>\n  )\n\n}\n\nexport default AdminIndex","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from './Login'\nimport AdminIndex from './AdminIndex'\nfunction Main() {\n    return (\n        <Router>\n            <Route path=\"/\" exact component={Login} />\n            {/* exact 默认为贪婪匹配，只要有就显示，加了exact表示，全匹配，必须一致才能显示 */}\n            <Route path=\"/index/\" component={AdminIndex} />\n        </Router>\n    )\n}\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Main from './pages/Main'\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}